// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Fetch = require("bs-fetch/lib/js/src/Fetch.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var FormData$BsFile = require("./FormData.bs.js");

function str(prim) {
  return prim;
}

var component = ReasonReact.reducerComponent("BsFileDemo");

function make() {
  var changeFile = function ($$event, self) {
    var files = $$event.target.files;
    return Curry._1(self[/* send */3], /* ChangeFile */[Caml_array.caml_array_get(files, 0)]);
  };
  var upload = function (_, self) {
    return Curry._1(self[/* send */3], /* Upload */0);
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var handle = param[/* handle */0];
              console.log(param[/* state */1]);
              return React.createElement("div", undefined, React.createElement("h1", undefined, "bs-file"), React.createElement("p", undefined, "open the console (CMD + C) to view logs"), React.createElement("input", {
                              type: "file",
                              onChange: Curry._1(handle, changeFile)
                            }), React.createElement("div", {
                              id: "preview"
                            }), React.createElement("button", {
                              onClick: Curry._1(handle, upload)
                            }, "Upload"));
            }),
          /* initialState */(function () {
              return /* record */[/* files : array */[]];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[/* files : array */[action[0]]]]);
              } else {
                console.log("upload");
                var data = FormData$BsFile.make(/* () */0);
                data.append("avatar", Caml_array.caml_array_get(state[/* files */0], 0));
                data.append("filename", "santaduck");
                console.log(data.get("avatar"));
                console.log(data.get("filename"));
                fetch("http://localhost:8080/profile", Fetch.RequestInit[/* make */0](/* Post */2, undefined, Js_primitive.some(data), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* () */0)).then((function (prim) {
                        return prim.json();
                      }));
                return /* Update */Block.__(0, [/* record */[/* files : array */[]]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.str = str;
exports.component = component;
exports.make = make;
/* component Not a pure module */
